#!/usr/bin/env tclsh
# Link a fossil repository (url) to a local git repository for mirroring.

# @@ Meta Begin
# Application bin/setup-import ?
# Meta author      ?
# Meta category    ?
# Meta description ?
# Meta location    http:/core.tcl.tk/akupries/fossil2git
# Meta platform    tcl
# Meta require     ?
# Meta subject     ?
# Meta summary     ?
# @@ Meta End

package require Tcl 8.5
package require fileutil

proc main {} {
    do {*}[cmdline]
    return
}

proc cmdline {} {
    global argv
    if {[llength $argv] != 2} { usage }

    #lassign $argv statedir fossilurl
    return $argv
}

proc usage {} {
    global argv0
    puts stderr "Usage: $argv0 statedir fossil-repository-url"
    exit 1
}

proc do {statedir url} {
    set project [lindex [split $url /] end]

    puts "$project ..."

    # Keep in sync with setup-local
    set src $statedir/in/$project.fossil
    set git $statedir/out/$project

    file delete -force $src $git
    file mkdir [file dirname $src]
    file mkdir $git

    set ::env(TZ) UTC

    puts "\tSetting up $git ..."
    run git --bare --git-dir=$git init
    file rename --force \
	$git/hooks/post-update.sample \
	$git/hooks/post-update

    fileutil::touch     $git/git-daemon-export-ok
    fileutil::writeFile $git/description \
	"Mirror of the $project fossil repository at $url\n"

    # The state file 'fossil-import-id' is not created. Its absence is
    # what allows 'do-mirror' to detect when it is called for the
    # first time.

    puts "\tCloning $url ..."
    run fossil clone $url $src

    puts ...Done
    return
}

proc run {args} {
    exec 2>@ stderr >@ stdout {*}$args
}

main
exit
