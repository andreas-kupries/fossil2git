#!/usr/bin/env tclsh
# Scan watch state for expired entires in seen
# (config days-to-expiry) days since the last access by watch-do.

# @@ Meta Begin
# Application bin/watch-expire ?
# Meta author      ?
# Meta category    ?
# Meta description ?
# Meta location    http:/core.tcl.tk/akupries/fossil2git
# Meta platform    tcl
# Meta require     ?
# Meta subject     ?
# Meta summary     ?
# @@ Meta End

# # ## ### ##### ######## ############# ######################

package require Tcl 8.5
package require sqlite3

# # ## ### ##### ######## ############# ######################

proc main {} {
    do {*}[cmdline]
    return
}

proc cmdline {} {
    global argv
    if {[llength $argv] != 0} { usage }

    #lassign $argv
    return $argv
}

proc usage {} {
    global argv0
    puts stderr "Usage: $argv0"
    exit 1
}

# # ## ### ##### ######## ############# ######################

proc dbfile {} {
    set f ~/.fossil.watch
    return $f
}

proc db {} {
    set watch [dbfile]
    if {![file exists $watch]} {
	puts "No database"
	return
    }
    sqlite3 DB $watch
    return
}

proc config {k} {
    # TODO: Move this information into the ~./.fossil.ewatch state
    #       file, and create tools to show and/or modify it.

    return [DB onecolumn {
	SELECT value FROM config WHERE key = :k
    }]
    # port 465 for tls
}

# # ## ### ##### ######## ############# ######################

proc do {} {
    db

    set expire [expr {[clock seconds] - 86400 * [config days-to-expiry]}]

    DB eval {
	DELETE FROM seen
	WHERE atime < :expire
    }

    puts "Expired artifacts: [DB changes]"
    return
}

# # ## ### ##### ######## ############# ######################

main
exit
