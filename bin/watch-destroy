#!/usr/bin/env tclsh
# Note a fossil repository for tracking of ticket changes.

# @@ Meta Begin
# Application bin/watch-destroy ?
# Meta author      ?
# Meta category    ?
# Meta description ?
# Meta location    http:/core.tcl.tk/akupries/fossil2git
# Meta platform    tcl
# Meta require     ?
# Meta subject     ?
# Meta summary     ?
# @@ Meta End

package require Tcl 8.5
package require sqlite3

# # ## ### ##### ######## ############# ######################

proc main {} {
    do {*}[cmdline]
    return
}

proc cmdline {} {
    global argv
    if {[llength $argv] != 1} { usage }

    #lassign $argv repository
    return $argv
}

proc usage {} {
    global argv0
    puts stderr "Usage: $argv0 fossil-repository-url"
    exit 1
}

# # ## ### ##### ######## ############# ######################

proc dbfile {} {
    set f ~/.fossil.watch
    return $f
}

proc db {} {
    set watch [dbfile]
    if {![file exists $watch]} {
	puts "No database"
	return
    }
    sqlite3 DB $watch
    return
}

# # ## ### ##### ######## ############# ######################

proc do {url} {
    db

    if {![pidof $url pid]} {
	puts "Unknown repository $url"
	return
    }

    puts $url

    DB transaction {
	DB eval {
	    DELETE FROM project_receiver WHERE pid = :pid ;
	    DELETE FROM project          WHERE pid = :pid ;
	}
    }

    puts ...Done
    return
}

proc pidof {url pv} {
    set x [DB onecolumn {
	SELECT pid FROM project WHERE repository = :url
    }]
    if {$x eq {}} { return 0 }
    upvar 1 $pv pid
    set pid $x
    return 1
}

# # ## ### ##### ######## ############# ######################

main
exit
