#!/usr/bin/env tclsh
# Note a fossil repository for tracking of ticket changes.

package require Tcl 8.5
package require sqlite3

# # ## ### ##### ######## ############# ######################

proc main {} {
    do {*}[cmdline]
    return
}

proc cmdline {} {
    global argv
    if {[llength $argv] != 0} { usage }

    #lassign $argv repository sendermail
    return $argv
}

proc usage {} {
    global argv0
    puts stderr "Usage: $argv0"
    exit 1
}

# # ## ### ##### ######## ############# ######################

proc dbfile {} {
    set f ~/.fossil.watch
    return $f
}

proc dbsetup {path} {
    sqlite3 DB $path

    # Database Schema
    #
    # seen-artifacts --(n:1) -- project --(n:m)-- receiver
    #
    # project:
    # - repository-url
    # - sender-email
    # seen-artifacts:
    # - project-reference
    # - artifact-hash
    # receiver:
    # - email
    # project-receiver (n:m relation storage)
    # - project reference
    # - receiver reference
    # config
    # - key
    # - value
    DB eval {
	CREATE TABLE project (
	    pid        INTEGER PRIMARY KEY AUTOINCREMENT,
	    repository STRING UNIQUE,
	    sendermail STRING
        );
	CREATE TABLE receiver (
	    rid  INTEGER PRIMARY KEY AUTOINCREMENT,
	    mail STRING UNIQUE
	);
	CREATE TABLE project_receiver (
	    pid INTEGER REFERENCES project  ( pid ),
	    rid INTEGER REFERENCES receiver ( rid ),
	    UNIQUE (pid, rid )
	);
	CREATE TABLE seen (
	    sid INTEGER PRIMARY KEY AUTOINCREMENT,
	    pid INTEGER REFERENCES project ( pid ),
	    hash STRING UNIQUE
	);
	CREATE TABLE config (
	    key   STRING PRIMARY KEY,
	    value STRING
	);
	INSERT INTO config VALUES ('debug',    0 );
	INSERT INTO config VALUES ('tls',      0 );
	INSERT INTO config VALUES ('user',     '');
	INSERT INTO config VALUES ('password', '');
	INSERT INTO config VALUES ('host',     'localhost');
	INSERT INTO config VALUES ('port',     25);
    }
    rename DB {}
    return
}

# # ## ### ##### ######## ############# ######################

proc do {} {
    set f [dbfile]
    if {[file exists $f]} {
	puts stderr "Database already exists at $f"
	exit 1
    }

    dbsetup $f

    puts "Database initialized at $f"
    return
}

# # ## ### ##### ######## ############# ######################

main
exit
