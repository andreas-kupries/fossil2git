# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2014 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## client enum change - Modify existing enumerations.

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

# # ## ### ##### ######## ############# #####################

test enum-change-1.0 {client enum change, wrong args, not enough} -setup {
    stage-open
} -body {
    run enum change
} -cleanup {
    stage-close
} -match glob -returnCodes error -result "* cmdr: wrong#args, not enough*"

test enum-change-1.1 {client enum change, wrong args, not enough} -setup {
    stage-open
} -body {
    run enum change E
} -cleanup {
    stage-close
} -match glob -returnCodes error -result "* cmdr: wrong#args, not enough*"

test enum-change-1.2 {client enum change, wrong args, not enough} -setup {
    stage-open
} -body {
    run enum change E O
} -cleanup {
    stage-close
} -match glob -returnCodes error -result "* cmdr: wrong#args, not enough*"

test enum-change-1.3 {client enum change, wrong args, too many} -setup {
    stage-open
} -body {
    run enum change E O N X
} -cleanup {
    stage-close
} -match glob -returnCodes error -result "* cmdr: wrong#args, too many*"

test enum-change-1.4 {client enum change, unknown enumeration} -setup {
    stage-open
} -body {
    run enum change foo O N
} -cleanup {
    stage-close
} -match glob -returnCodes error -result [fail-expected {an enumeration} input enum foo]

test enum-change-1.5 {client enum change, unknown source item} -setup {
    stage-open
    run enum create foo
} -body {
    run enum change foo a b
} -cleanup {
    run enum delete foo
    stage-close
} -match glob -returnCodes error -result [fail-expected {an enumeration item} input item a]

test enum-change-1.6 {client enum change, duplicate destination item} -setup {
    stage-open
    run enum create foo a b
} -body {
    run enum change foo a b
} -cleanup {
    run enum delete foo
    stage-close
} -match glob -returnCodes error -result [fail-expected {an unused enumeration item} input newitem b]

# # ## ### ##### ######## ############# #####################

test enum-change-2.0 {client enum change} -setup {
    stage-open
    on-stage {
	run enum create foo a
    }
} -body {
    on-stage {
	run enum change foo a b
	run enum items  foo
    }
} -cleanup {
    on-stage {
	run enum delete foo
    }
    stage-close
} -match glob -result [viewFile support/ech-20.txt]

# # ## ### ##### ######## ############# #####################
cleanupTests
